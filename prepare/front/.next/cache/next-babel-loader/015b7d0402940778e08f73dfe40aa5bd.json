{"ast":null,"code":"import { all, fork, put, takeLatest, delay, call } from \"@redux-saga/core/effects\";\nimport axios from 'axios';\nimport { LOG_IN_SUCCESS, LOG_IN_REQUEST, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE } from '../reducers/user';\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\n;\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction loadFollowersAPI(data) {\n  return axios.get('/user/followers', data);\n}\n\n;\n\nfunction* loadFollowers(action) {\n  try {\n    const result = yield call(loadFollowersAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction loadFollowingsAPI(data) {\n  return axios.get('/user/folowings', data);\n}\n\n;\n\nfunction* loadFollowings(action) {\n  try {\n    const result = yield call(loadFollowingsAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\n;\n\nfunction* loadMyInfo(action) {\n  try {\n    const result = yield call(loadMyInfoAPI, action.data);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\n;\n\nfunction* login(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\n;\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  return axios.delete(`/user/${data}/follow`);\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login); //로그인이 실행될때까지 기다리겠다는 뜻\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLoadMyInfo), fork(watchLogin), fork(watchLogOut), fork(watchSignUp), fork(watchUnfollow), fork(watchFollow), fork(watchLoadFollowings), fork(watchLoadFollowers), fork(watchChangeNickname)]);\n}","map":{"version":3,"sources":["C:/Users/Kim/OneDrive/바탕 화면/React/nodeBird/prepare/front/sagas/user.js"],"names":["all","fork","put","takeLatest","delay","call","axios","LOG_IN_SUCCESS","LOG_IN_REQUEST","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","changeNicknameAPI","data","patch","nickname","changeNickname","action","result","type","err","error","response","loadFollowersAPI","get","loadFollowers","LOAD_FOLLOWERS_SUCCESS","console","LOAD_FOLLOWERS_FAILURE","loadFollowingsAPI","loadFollowings","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","loadMyInfoAPI","loadMyInfo","logInAPI","post","login","logOutAPI","logOut","signUpAPI","signUp","log","followAPI","follow","unfollowAPI","delete","unfollow","watchLogin","watchLogOut","watchChangeNickname","watchSignUp","watchFollow","watchUnfollow","watchLoadMyInfo","watchLoadFollowers","LOAD_FOLLOWERS_REQUEST","watchLoadFollowings","LOAD_FOLLOWINGS_REQUEST","userSaga"],"mappings":"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","sourcesContent":["import { all,fork, put, takeLatest, delay, call } from \"@redux-saga/core/effects\";\r\nimport axios from 'axios';\r\nimport { LOG_IN_SUCCESS, LOG_IN_REQUEST, LOG_IN_FAILURE,\r\n         LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\r\n         SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, \r\n         FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE,\r\n         UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE,\r\n         LOAD_MY_INFO_FAILURE,LOAD_MY_INFO_REQUEST,LOAD_MY_INFO_SUCCESS, \r\n         CHANGE_NICKNAME_REQUEST,CHANGE_NICKNAME_SUCCESS,CHANGE_NICKNAME_FAILURE,}\r\nfrom '../reducers/user'\r\n\r\nfunction changeNicknameAPI(data) {\r\n    return axios.patch('/user/nickname', {nickname: data });\r\n};\r\n\r\nfunction* changeNickname(action) {\r\n    try{\r\n        const result = yield call(changeNicknameAPI, action.data);\r\n        yield put({\r\n            type: CHANGE_NICKNAME_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    }catch (err){\r\n        yield put({\r\n            type: CHANGE_NICKNAME_FAILURE,\r\n            error: err.response.data,   \r\n        });\r\n    }\r\n};\r\n\r\nfunction loadFollowersAPI(data) {\r\n    return axios.get('/user/followers',  data );\r\n};\r\n\r\nfunction* loadFollowers(action) {\r\n    try{\r\n        const result = yield call(loadFollowersAPI, action.data);\r\n        yield put({\r\n            type: LOAD_FOLLOWERS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    }catch (err){\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_FOLLOWERS_FAILURE,\r\n            error: err.response.data,   \r\n        });\r\n    }\r\n};\r\n\r\nfunction loadFollowingsAPI(data) {\r\n    return axios.get('/user/folowings',  data );\r\n};\r\n\r\nfunction* loadFollowings(action) {\r\n    try{\r\n        const result = yield call(loadFollowingsAPI, action.data);\r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    }catch (err){\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_FAILURE,\r\n            error: err.response.data,   \r\n        });\r\n    }\r\n};\r\n\r\nfunction loadMyInfoAPI() {\r\n    return axios.get('/user');\r\n};\r\n\r\nfunction* loadMyInfo(action) {\r\n    try{\r\n        const result = yield call(loadMyInfoAPI, action.data);\r\n        yield put({\r\n            type: LOAD_MY_INFO_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    }catch (err){\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_MY_INFO_FAILURE,\r\n            error: err.response.data,   \r\n        });\r\n    }\r\n};\r\n\r\n\r\nfunction logInAPI(data) {\r\n    return axios.post('/user/login', data);\r\n};\r\n\r\nfunction* login(action) {\r\n    try{\r\n        const result = yield call(logInAPI, action.data);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    }catch (err){\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,   \r\n        });\r\n    }\r\n};\r\n\r\nfunction logOutAPI() {\r\n    return axios.post('/user/logout');\r\n};\r\n\r\nfunction* logOut() { \r\n    try{\r\n        yield call(logOutAPI);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    }catch (err){\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,   \r\n        });\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try{\r\n        const result = yield call(signUpAPI, action.data);\r\n        console.log(result);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    }catch (err){\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,   \r\n        })\r\n    }\r\n}\r\n\r\nfunction followAPI(data) {\r\n    return axios.patch(`/user/${data}/follow`);\r\n}\r\n\r\nfunction* follow(action) {\r\n    try{\r\n        const result = yield call(followAPI, action.data);\r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    }catch (err){\r\n        console.error(err);\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data,   \r\n        })\r\n    }\r\n}\r\n\r\nfunction unfollowAPI(data) {\r\n    return axios.delete(`/user/${data}/follow`);\r\n}\r\n\r\nfunction* unfollow(action) {\r\n    try{\r\n        const result = yield call(unfollowAPI, action.data);\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    }catch (err){\r\n        console.error(err);\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data,   \r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction* watchLogin() {\r\n    yield takeLatest(LOG_IN_REQUEST, login); //로그인이 실행될때까지 기다리겠다는 뜻\r\n}\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST,logOut);\r\n}\r\nfunction* watchChangeNickname() {\r\n    yield takeLatest(CHANGE_NICKNAME_REQUEST,changeNickname);\r\n}\r\nfunction* watchSignUp () {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\nfunction* watchLoadMyInfo() {\r\n    yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\nfunction* watchLoadFollowers() {\r\n    yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\nfunction* watchLoadFollowings() {\r\n    yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\n    \r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLoadMyInfo),\r\n        fork(watchLogin),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n        fork(watchUnfollow),\r\n        fork(watchFollow),\r\n        fork(watchLoadFollowings),\r\n        fork(watchLoadFollowers),\r\n        fork(watchChangeNickname),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}