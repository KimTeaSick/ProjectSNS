{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kim\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\React\\\\nodeBird\\\\prepare\\\\front\\\\componets\\\\PostCard.js\";\nimport { Avatar, Button, Card, Popover, List, Comment } from \"antd\";\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport PostImages from \"./PostImages\";\nimport { useCallback, useState } from \"react\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./postCardContent\";\nimport { REMOVE_POST_REQUEST, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST } from \"../reducers/post\";\nimport FollowButton from \"./FollowButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    removePostLoading\n  } = useSelector(state => state.post);\n  const onLike = useCallback(() => {\n    dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  const onUnLike = useCallback(() => {\n    dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 42\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retwwet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onUnLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              loading: removePostLoading,\n              onClick: onRemovePost,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)],\n      extra: id && /*#__PURE__*/_jsxDEV(FollowButton, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 32\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        header: `${post.Comments.length}개의 댓글`,\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: item.User.nickname,\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: item.User.nickname[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 45\n            }, this),\n            content: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createAt: PropTypes.string,\n    Commemnts: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/Kim/OneDrive/바탕 화면/React/nodeBird/prepare/front/componets/PostCard.js"],"names":["Avatar","Button","Card","Popover","List","Comment","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","useDispatch","useSelector","PropTypes","PostImages","useCallback","useState","CommentForm","PostCardContent","REMOVE_POST_REQUEST","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","FollowButton","PostCard","post","dispatch","removePostLoading","state","onLike","type","data","id","onUnLike","commentFormOpened","setCommentFormOpened","onToggleComment","prev","onRemovePost","user","me","marginBottom","Images","liked","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createAt","Commemnts","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import { Avatar, Button, Card, Popover, List, Comment } from \"antd\";\r\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport PostImages from \"./PostImages\";\r\nimport { useCallback, useState } from \"react\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport PostCardContent from \"./postCardContent\";\r\nimport { REMOVE_POST_REQUEST,LIKE_POST_REQUEST, UNLIKE_POST_REQUEST } from \"../reducers/post\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\nconst PostCard = ({post}) => {\r\n    const dispatch = useDispatch();\r\n    const { removePostLoading } = useSelector((state) => state.post);\r\n    const onLike = useCallback(() =>{\r\n        dispatch({\r\n        type: LIKE_POST_REQUEST,\r\n        data: post.id,\r\n        })\r\n    },[]);\r\n\r\n    const onUnLike = useCallback(() =>{\r\n        dispatch({\r\n        type: UNLIKE_POST_REQUEST,\r\n        data: post.id,\r\n        })\r\n    },[]);\r\n\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    const onToggleComment = useCallback(() =>{\r\n        setCommentFormOpened((prev) => !prev);\r\n    },[]);\r\n    const onRemovePost = useCallback(()=>{\r\n        dispatch({\r\n            type: REMOVE_POST_REQUEST,\r\n            data: post.id,\r\n      });\r\n    }, []);\r\n\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    return(\r\n        <div style={{ marginBottom: 20}}>\r\n            <Card\r\n                cover={post.Images[0] && <PostImages images={post.Images} />}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retwwet\" />,\r\n                    liked\r\n                    ?<HeartTwoTone  twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onUnLike} />\r\n                    :<HeartOutlined key=\"heart\" onClick={onLike} />,\r\n                    <MessageOutlined key=\"comment\" onClick = {onToggleComment} />,\r\n                    <Popover key=\"more\" content={(\r\n                        <Button.Group>\r\n                            {id && post.User.id === id ?\r\n                            (\r\n                            <>\r\n                            <Button>수정</Button>\r\n                            <Button type=\"danger\" loading={removePostLoading} onClick={onRemovePost}>삭제</Button>\r\n                            </>\r\n                            ) : <Button>신고</Button> }\r\n                        </Button.Group>\r\n                    )}>\r\n                        <EllipsisOutlined />\r\n                    </Popover>\r\n                ]}\r\n                extra = {id && <FollowButton post = {post} />}\r\n            >\r\n                <Card.Meta\r\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                    title={post.User.nickname}\r\n                    description={<PostCardContent postData={post.content}/>}\r\n                />\r\n            </Card>\r\n            {commentFormOpened && (\r\n                <div>\r\n                    <CommentForm post = {post} />\r\n                    <List \r\n                        header = {`${post.Comments.length}개의 댓글`}\r\n                        itemLayout = \"horizontal\"\r\n                        dataSource = {post.Comments}\r\n                        renderItem={(item) => (\r\n                            <li>\r\n                                <Comment\r\n                                    author={item.User.nickname}\r\n                                    avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                                    content={item.content}\r\n                                />\r\n                            </li>\r\n                        )}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n        id:PropTypes.number,\r\n        User:PropTypes.object, \r\n        content: PropTypes.string,\r\n        createAt: PropTypes.string,\r\n        Commemnts : PropTypes.arrayOf(PropTypes.object),\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n}\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}