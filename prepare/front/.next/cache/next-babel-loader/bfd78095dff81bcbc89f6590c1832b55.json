{"ast":null,"code":"import { all, fork, put, takeLatest, delay } from \"@redux-saga/core/effects\";\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post;';\n\nfunction addPostAPI(data) {\n  return axios.post('/api.addPost', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS //data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post('/api.addComment', data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS //data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/Users/Kim/OneDrive/바탕 화면/React/nodeBird/prepare/front/sagas/post.js"],"names":["all","fork","put","takeLatest","delay","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostAPI","data","post","addPost","action","type","err","error","response","addCommentAPI","addComment","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,KAArC,QAAkD,0BAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,gBAA7C,EACSC,mBADT,EAC8BC,mBAD9B,EACmDC,mBADnD,QAEc,mBAFd;;AAKA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,SAAOR,KAAK,CAACS,IAAN,CAAW,cAAX,EAA2BD,IAA3B,CAAP;AACH;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAG;AACC;AACA,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAEV,gBADA,CAEN;;AAFM,KAAD,CAAT;AAIH,GAPD,CAOC,OAAOW,GAAP,EAAW;AACR,UAAMhB,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAET,gBADA;AAENW,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaP;AAFd,KAAD,CAAT;AAIH;AACJ;;AAED,SAASQ,aAAT,CAAuBR,IAAvB,EAA6B;AACzB,SAAOR,KAAK,CAACS,IAAN,CAAW,iBAAX,EAA8BD,IAA9B,CAAP;AACH;;AAED,UAAUS,UAAV,CAAqBN,MAArB,EAA6B;AACzB,MAAG;AACC;AACA,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAEP,mBADA,CAEN;;AAFM,KAAD,CAAT;AAIH,GAPD,CAOC,OAAOQ,GAAP,EAAW;AACR,UAAMhB,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAEN,mBADA;AAENQ,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaP;AAFd,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUU,YAAV,GAAyB;AACrB,QAAMpB,UAAU,CAACG,gBAAD,EAAkBS,OAAlB,CAAhB;AACH;;AACD,UAAUS,eAAV,GAA4B;AACxB,QAAMrB,UAAU,CAACM,mBAAD,EAAqBa,UAArB,CAAhB;AACH;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAChC,QAAMzB,GAAG,CAAC,CACNC,IAAI,CAACsB,YAAD,CADE,EAENtB,IAAI,CAACuB,eAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, fork, put, takeLatest, delay } from \"@redux-saga/core/effects\";\r\nimport axios from 'axios';\r\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n         ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE}\r\n         from '../reducers/post;'\r\n\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/api.addPost', data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try{\r\n        // const result = yield call(addPostAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n            //data: result.data,\r\n        });\r\n    }catch (err){\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            error: err.response.data,   \r\n        })\r\n    }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n    return axios.post('/api.addComment', data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n    try{\r\n        // const result = yield call(addPostAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            //data: result.data,\r\n        });\r\n    }catch (err){\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            error: err.response.data,   \r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST,addPost);\r\n}\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST,addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}