{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initalState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n};\nexport const loginAction = data => {\n  return {\n    type: \"LOG_IN\"\n  };\n};\nexport const logoutAction = data => {\n  return {\n    type: \"LOG_OUT\"\n  };\n};\n\nconst rootReducer = (state = initalState, action) => {\n  switch (action.type) {\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true\n        })\n      });\n\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false,\n          user: null\n        })\n      });\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/Kim/OneDrive/바탕 화면/React/nodeBird/prepare/front/reducers/index.js"],"names":["initalState","user","isLoggedIn","signUpData","loginData","post","mainPosts","loginAction","data","type","logoutAction","rootReducer","state","action"],"mappings":";;;;;;AAAA,MAAMA,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE,KADV;AAEFD,IAAAA,IAAI,EAAG,IAFL;AAGFE,IAAAA,UAAU,EAAE,EAHV;AAIFC,IAAAA,SAAS,EAAE;AAJT,GADU;AAOhBC,EAAAA,IAAI,EAAG;AACHC,IAAAA,SAAS,EAAE;AADR;AAPS,CAApB;AAaA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACjC,SAAM;AACFC,IAAAA,IAAI,EAAC;AADH,GAAN;AAIH,CALM;AAMP,OAAO,MAAMC,YAAY,GAAIF,IAAD,IAAU;AAClC,SAAM;AACFC,IAAAA,IAAI,EAAC;AADH,GAAN;AAIH,CALM;;AAOP,MAAME,WAAW,GAAG,CAACC,KAAK,GAAGZ,WAAT,EAAsBa,MAAtB,KAA+B;AAC/C,UAAOA,MAAM,CAACJ,IAAd;AACI,SAAK,QAAL;AACI,6CACOG,KADP;AAEIX,QAAAA,IAAI,kCACGW,KAAK,CAACX,IADT;AAEAC,UAAAA,UAAU,EAAE;AAFZ;AAFR;;AAOJ,SAAK,SAAL;AACI,6CACOU,KADP;AAEIX,QAAAA,IAAI,kCACGW,KAAK,CAACX,IADT;AAEAC,UAAAA,UAAU,EAAE,KAFZ;AAGAD,UAAAA,IAAI,EAAE;AAHN;AAFR;AAVR;AAmBH,CApBD;;AAsBA,eAAeU,WAAf","sourcesContent":["const initalState = {\r\n    user: {\r\n        isLoggedIn: false,\r\n        user : null,\r\n        signUpData: {},\r\n        loginData: {},\r\n    },\r\n    post : {\r\n        mainPosts: [],\r\n\r\n    }\r\n};\r\n\r\nexport const loginAction = (data) => {\r\n    return{\r\n        type:\"LOG_IN\",\r\n\r\n    }\r\n}\r\nexport const logoutAction = (data) => {\r\n    return{\r\n        type:\"LOG_OUT\",\r\n\r\n    }\r\n}\r\n\r\nconst rootReducer = (state = initalState, action)=>{\r\n    switch(action.type) {\r\n        case 'LOG_IN':\r\n            return{\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    isLoggedIn: true,\r\n                },\r\n            };\r\n        case 'LOG_OUT':\r\n            return{\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    isLoggedIn: false,\r\n                    user: null,\r\n                },\r\n            };\r\n    }\r\n};\r\n\r\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}