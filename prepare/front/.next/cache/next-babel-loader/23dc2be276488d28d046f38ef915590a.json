{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kim\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\React\\\\nodeBird\\\\prepare\\\\front\\\\componets\\\\PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input } from \"antd\";\nimport React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPost } from \"../reducers/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var imageInput = useRef();\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone;\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n\n  var onChangeText = function onChangeText(e) {\n    setText(e.target.value);\n  };\n\n  var onSubmit = useCallback(function () {\n    dispatch(addPost(text));\n    setText('');\n  }, []);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        typr: \"primary\",\n        style: {\n          \"float\": ' right'\n        },\n        htmlType: \"submit\",\n        children: \"\\uC9F9\\uC9F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: v,\n            style: {\n              width: '200px'\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostForm, \"quKIxdZ7RNw6Oox9Y1liB0XkI/Q=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/Kim/OneDrive/바탕 화면/React/nodeBird/prepare/front/componets/PostForm.js"],"names":["Button","Form","Input","React","useCallback","useState","useRef","useEffect","useDispatch","useSelector","addPost","PostForm","imageInput","dispatch","state","post","imagePaths","addPostDone","text","setText","onChangeText","e","target","value","onSubmit","onClickImageUpload","current","click","margin","map","v","display","width"],"mappings":"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","sourcesContent":["import { Button, Form, Input } from \"antd\";\r\nimport React, { useCallback, useState, useRef, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addPost } from \"../reducers/post\";\r\n\r\nconst PostForm = () => {\r\n    const imageInput = useRef();\r\n    const dispatch = useDispatch();\r\n    const { imagePaths, addPostDone } = useSelector((state) => state.post);\r\n    const [text, setText] = useState('');\r\n\r\n    useEffect(() => {\r\n        if(addPostDone){\r\n            setText('');\r\n        }\r\n    }, [addPostDone])\r\n\r\n    const onChangeText = (e) => {\r\n        setText(e.target.value);\r\n    }\r\n    const onSubmit = useCallback(()=> {\r\n        dispatch(addPost(text));\r\n        setText('');\r\n    }, []);\r\n\r\n    const onClickImageUpload = useCallback(()=>{\r\n        imageInput.current.click();\r\n    },[imageInput.current])\r\n    return(\r\n        <Form style={{ margin: '10px 0 20px'}} encType=\"multipart/form-data\" onFinish = {onSubmit}>\r\n            <Input.TextArea\r\n                value={text}\r\n                onChange={onChangeText}\r\n                maxLength={140}\r\n                placeholder=\"어떤 신기한 일이 있었나요?\" />\r\n            <div>\r\n                <input type=\"file\" multiple hidden ref={imageInput} />\r\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n                <Button typr=\"primary\" style={{ float: ' right' }} htmlType=\"submit\">짹짹</Button>\r\n            </div>\r\n            <div>\r\n                {imagePaths.map((v) => (\r\n                    <div key={v} style={{ display: 'inline-block'}}>\r\n                        <img src={v} style={{ width : '200px' }} alt={v}/>\r\n                        <div>\r\n                            <Button>제거</Button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Form>\r\n    )\r\n};\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}