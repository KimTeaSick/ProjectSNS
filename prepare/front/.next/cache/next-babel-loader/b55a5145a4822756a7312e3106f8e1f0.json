{"ast":null,"code":"import { all, fork, put, takeLatest, delay, call } from \"@redux-saga/core/effects\";\nimport axios from 'axios';\nimport { LOG_IN_SUCCESS, LOG_IN_REQUEST, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE } from '../reducers/user';\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\n;\n\nfunction* login(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\n;\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/api.follow');\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(signUpAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post('/api.unfollow');\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(signUpAPI);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login); //로그인이 실행될때까지 기다리겠다는 뜻\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogOut), fork(watchSignUp), fork(watchUnfollow), fork(watchFollow)]);\n}","map":{"version":3,"sources":["C:/Users/Kim/OneDrive/바탕 화면/React/nodeBird/prepare/front/sagas/user.js"],"names":["all","fork","put","takeLatest","delay","call","axios","LOG_IN_SUCCESS","LOG_IN_REQUEST","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","logInAPI","data","post","login","action","result","type","err","error","response","logOutAPI","logOut","signUpAPI","signUp","console","log","followAPI","follow","unfollowAPI","unfollow","watchLogin","watchLogOut","watchSignUp","watchFollow","watchUnfollow","userSaga"],"mappings":"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","sourcesContent":["import { all,fork, put, takeLatest, delay, call } from \"@redux-saga/core/effects\";\r\nimport axios from 'axios';\r\nimport { LOG_IN_SUCCESS, LOG_IN_REQUEST, LOG_IN_FAILURE,\r\n         LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\r\n         SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, \r\n         FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE,\r\n         UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE,}\r\nfrom '../reducers/user'\r\n\r\n\r\n\r\n\r\nfunction logInAPI(data) {\r\n    return axios.post('/user/login', data);\r\n};\r\n\r\nfunction* login(action) {\r\n    try{\r\n        const result = yield call(logInAPI, action.data);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    }catch (err){\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,   \r\n        });\r\n    }\r\n};\r\n\r\nfunction logOutAPI() {\r\n    return axios.post('/user/logout');\r\n};\r\n\r\nfunction* logOut() { \r\n    try{\r\n        yield call(logOutAPI);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    }catch (err){\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,   \r\n        });\r\n    }\r\n};\r\n\r\nfunction signUpAPI(data) {\r\n    return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try{\r\n        const result = yield call(signUpAPI, action.data);\r\n        console.log(result);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    }catch (err){\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,   \r\n        })\r\n    }\r\n}\r\n\r\nfunction followAPI() {\r\n    return axios.post('/api.follow');\r\n}\r\n\r\nfunction* follow(action) {\r\n    try{\r\n        // const result = yield call(signUpAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    }catch (err){\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data,   \r\n        })\r\n    }\r\n}\r\n\r\nfunction unfollowAPI() {\r\n    return axios.post('/api.unfollow');\r\n}\r\n\r\nfunction* unfollow(action) {\r\n    try{\r\n        // const result = yield call(signUpAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    }catch (err){\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data,   \r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction* watchLogin() {\r\n    yield takeLatest(LOG_IN_REQUEST, login); //로그인이 실행될때까지 기다리겠다는 뜻\r\n}\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST,logOut);\r\n}\r\nfunction* watchSignUp () {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n    \r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n        fork(watchUnfollow),\r\n        fork(watchFollow),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}