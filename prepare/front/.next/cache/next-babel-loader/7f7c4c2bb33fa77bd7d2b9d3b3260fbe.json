{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Kim\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\React\\\\nodeBird\\\\prepare\\\\front\\\\componets\\\\CommentForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Form, Input, Button } from \"antd\";\nimport { useCallback, useState } from \"react\";\nimport useinput from \"../hooks/useinput\";\nimport PropTypes from 'prop-types';\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$User$me;\n\n    return (_state$User$me = state.User.me) === null || _state$User$me === void 0 ? void 0 : _state$User$me.id;\n  });\n\n  var _useinput = useinput(''),\n      _useinput2 = _slicedToArray(_useinput, 2),\n      commentText = _useinput2[0],\n      onChangeCommentText = _useinput2[1];\n\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        row: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CommentForm, \"LQcb+mhslgOd56wNOY8uVXV5h5Q=\", false, function () {\n  return [useSelector];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["C:/Users/Kim/OneDrive/바탕 화면/React/nodeBird/prepare/front/componets/CommentForm.js"],"names":["Form","Input","Button","useCallback","useState","useinput","PropTypes","useSelector","CommentForm","post","id","state","User","me","commentText","onChangeCommentText","onSubmitComment","console","log","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,SAASA,IAAT,EAAeC,KAAf,EAAqBC,MAArB,QAAmC,MAAnC;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAW;AAAA;;AAAA,MAATC,IAAS,QAATA,IAAS;AAC3B,MAAMC,EAAE,GAAGH,WAAW,CAAC,UAACI,KAAD;AAAA;;AAAA,6BAAUA,KAAK,CAACC,IAAN,CAAWC,EAArB,mDAAU,eAAeH,EAAzB;AAAA,GAAD,CAAtB;;AACA,kBAA2CL,QAAQ,CAAC,EAAD,CAAnD;AAAA;AAAA,MAAOS,WAAP;AAAA,MAAoBC,mBAApB;;AACA,MAAMC,eAAe,GAAGb,WAAW,CAAC,YAAM;AACtCc,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACC,EAAjB,EAAqBI,WAArB;AACH,GAFkC,EAEjC,CAACA,WAAD,CAFiC,CAAnC;AAGA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAIE,eAAlB;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEF,WAAvB;AAAoC,QAAA,QAAQ,EAAIC,mBAAhD;AAAqE,QAAA,GAAG,EAAE;AAA1E;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CAdD;;GAAMP,W;UACSD,W;;;KADTC,W;AAgBNA,WAAW,CAACW,SAAZ,GAAwB;AACpBV,EAAAA,IAAI,EAAEH,SAAS,CAACc,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAeb,WAAf","sourcesContent":["import { Form, Input,Button } from \"antd\"\r\nimport { useCallback, useState } from \"react\";\r\nimport useinput from \"../hooks/useinput\";\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst CommentForm = ({post}) =>{\r\n    const id = useSelector((state)=> state.User.me?.id)\r\n    const [commentText, onChangeCommentText] = useinput('');\r\n    const onSubmitComment = useCallback(() => {\r\n        console.log(post.id, commentText);\r\n    },[commentText])\r\n    return(\r\n        <Form onFinish = {onSubmitComment}>\r\n            <Form.Item>\r\n                <Input.TextArea value={commentText} onChange = {onChangeCommentText} row={4} />\r\n                <Button type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}