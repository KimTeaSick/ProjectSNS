{"ast":null,"code":"import { all, fork, put, takeLatest, delay } from \"@redux-saga/core/effects\";\nimport axios from 'axios';\nimport shortid from \"shortid\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME } from \"../reducers/user\";\n\nfunction addPostAPI(data) {\n  return axios.post('/api.addPost', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    const id = shortid.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        content: action.data,\n        id\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.post('/api.removePost', data);\n}\n\nfunction* removePost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    const id = shortid.generate();\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: {\n        content: action.data,\n        id\n      }\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: id\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${id}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchRemovePost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/Users/Kim/OneDrive/바탕 화면/React/nodeBird/prepare/front/sagas/post.js"],"names":["all","fork","put","takeLatest","delay","axios","shortid","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_POST_TO_ME","addPostAPI","data","post","addPost","action","id","generate","type","content","err","error","response","removePostAPI","removePost","REMOVE_POST_SUCCESS","REMOVE_POST_OF_ME","REMOVE_POST_FAILURE","addCommentAPI","addComment","watchAddPost","watchRemovePost","REMOVE_POST_REQUEST","watchAddComment","postSaga"],"mappings":"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","sourcesContent":["import { all, fork, put, takeLatest, delay } from \"@redux-saga/core/effects\";\r\nimport axios from 'axios';\r\nimport shortid from \"shortid\";\r\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n         ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE}\r\nfrom '../reducers/post';\r\nimport { ADD_POST_TO_ME } from \"../reducers/user\";\r\n\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/api.addPost', data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try{\r\n        // const result = yield call(addPostAPI, action.data);\r\n        yield delay(1000);\r\n        const id = shortid.generate();\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n            data: {\r\n            content: action.data,\r\n            id,\r\n            },\r\n        });\r\n        yield put ({\r\n            type: ADD_POST_TO_ME,\r\n            data: id,\r\n        });\r\n    }catch (err){\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            error: err.response.data,   \r\n        })\r\n    }\r\n}\r\n\r\nfunction removePostAPI(data) {\r\n    return axios.post('/api.removePost', data);\r\n}\r\n\r\nfunction* removePost(action) {\r\n    try{\r\n        // const result = yield call(addPostAPI, action.data);\r\n        yield delay(1000);\r\n        const id = shortid.generate();\r\n        yield put({\r\n            type: REMOVE_POST_SUCCESS,\r\n            data: {\r\n            content: action.data,\r\n            id,\r\n            },\r\n        });\r\n        yield put ({\r\n            type: REMOVE_POST_OF_ME,\r\n            data: id,\r\n        });\r\n    }catch (err){\r\n        yield put({\r\n            type: REMOVE_POST_FAILURE,\r\n            error: err.response.data,   \r\n        })\r\n    }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n    return axios.post(`/api/post/${id}/comment`, data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n    try{\r\n        // const result = yield call(addPostAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    }catch (err){\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            error: err.response.data,   \r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST,addPost);\r\n}\r\nfunction* watchRemovePost() {\r\n    yield takeLatest(REMOVE_POST_REQUEST,removePost);\r\n}\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST,addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchRemovePost),\r\n        fork(watchAddComment)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}