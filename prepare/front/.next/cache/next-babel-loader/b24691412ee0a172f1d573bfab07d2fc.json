{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Kim\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\React\\\\nodeBird\\\\prepare\\\\front\\\\componets\\\\PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input } from \"antd\";\nimport React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport image from \"../../back/models/image\";\nimport useinput from \"../hooks/useinput\";\nimport { addPost, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from \"../reducers/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone;\n\n  var _useinput = useinput(''),\n      _useinput2 = _slicedToArray(_useinput, 3),\n      text = _useinput2[0],\n      onChangeText = _useinput2[1],\n      setText = _useinput2[2];\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  var onSubmit = useCallback(function () {\n    var formdata = new FormData();\n    imagePaths.forEach(function (p) {\n      formdata.append('image', p);\n    });\n    formdata.append('content', text);\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: formdata\n    });\n  }, [text, imagePaths]);\n  var imageInput = useRef();\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChangeImages = useCallback(function (e) {\n    console.log('images', e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  });\n  var onRemoveImage = useCallback(function (index) {\n    return function () {\n      dispatch({\n        type: REMOVE_IMAGE,\n        dara: index\n      });\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput,\n        onChange: onChangeImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": ' right'\n        },\n        htmlType: \"submit\",\n        children: \"\\uC9F9\\uC9F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://loaclhost:3065/\".concat(v),\n            style: {\n              width: '200px'\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onRemoveImage(i),\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostForm, \"FItu/1WsBsAurxw4ZR8KOGt2LF0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/Kim/OneDrive/바탕 화면/React/nodeBird/prepare/front/componets/PostForm.js"],"names":["Button","Form","Input","React","useCallback","useState","useRef","useEffect","useDispatch","useSelector","image","useinput","addPost","UPLOAD_IMAGES_REQUEST","REMOVE_IMAGE","ADD_POST_REQUEST","PostForm","dispatch","state","post","imagePaths","addPostDone","text","onChangeText","setText","onSubmit","formdata","FormData","forEach","p","append","type","data","imageInput","onClickImageUpload","current","click","onChangeImages","e","console","log","target","files","imageFormData","call","f","onRemoveImage","index","dara","margin","map","v","display","width","i"],"mappings":"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","sourcesContent":["import { Button, Form, Input } from \"antd\";\r\nimport React, { useCallback, useState, useRef, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport image from \"../../back/models/image\";\r\nimport useinput from \"../hooks/useinput\";\r\nimport { addPost, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from \"../reducers/post\";\r\n\r\nconst PostForm = () => {\r\n    const dispatch = useDispatch();\r\n    const { imagePaths, addPostDone } = useSelector((state) => state.post);\r\n    const [text, onChangeText, setText] = useinput('');\r\n\r\n    useEffect(() => {\r\n        if(addPostDone){\r\n            setText('');\r\n        }\r\n    }, [addPostDone])\r\n\r\n    const onSubmit = useCallback(()=> {\r\n        const formdata = new FormData();\r\n        imagePaths.forEach((p) => {\r\n            formdata.append('image', p);\r\n        });\r\n        formdata.append('content', text);\r\n        dispatch({\r\n            type: ADD_POST_REQUEST,\r\n            data: formdata,\r\n        })\r\n    }, [text, imagePaths]);\r\n    \r\n    const imageInput = useRef();\r\n    const onClickImageUpload = useCallback(()=>{\r\n        imageInput.current.click();\r\n    },[imageInput.current]);\r\n\r\n    const onChangeImages = useCallback((e)=>{\r\n        console.log('images', e.target.files);\r\n        const imageFormData = new FormData();\r\n        [].forEach.call(e.target.files,(f)=>{\r\n            imageFormData.append('image', f);\r\n        });\r\n        dispatch({\r\n            type: UPLOAD_IMAGES_REQUEST,\r\n            data: imageFormData,\r\n        })\r\n    });\r\n    const onRemoveImage = useCallback((index)=>()=>{\r\n        dispatch({\r\n            type: REMOVE_IMAGE,\r\n            dara: index,\r\n        });\r\n    });\r\n\r\n    return(\r\n        <Form style={{ margin: '10px 0 20px'}} encType=\"multipart/form-data\" onFinish = {onSubmit}>\r\n            <Input.TextArea\r\n                value={text}\r\n                onChange={onChangeText}\r\n                maxLength={140}\r\n                placeholder=\"어떤 신기한 일이 있었나요?\" />\r\n            <div>\r\n                <input type=\"file\" name=\"image\" multiple hidden ref={imageInput} onChange={onChangeImages} />\r\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n                <Button type=\"primary\" style={{ float: ' right' }} htmlType=\"submit\">짹짹</Button>\r\n            </div>\r\n            <div>\r\n                {imagePaths.map((v) => (\r\n                    <div key={v} style={{ display: 'inline-block'}}>\r\n                        <img src={`http://loaclhost:3065/${v}`} style={{ width : '200px' }} alt={v}/>\r\n                        <div>\r\n                            <Button onClick={onRemoveImage(i)}>제거</Button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Form>\r\n    )\r\n};\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}