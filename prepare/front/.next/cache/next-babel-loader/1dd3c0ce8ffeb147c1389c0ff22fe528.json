{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport shortId from 'shortid';\nexport var initalState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    content: '첫번째 게시물 입니다. #해시태그 #익스프레스',\n    Images: [{\n      id: shortId.generate(),\n      src: 'https://cdn.mkhealth.co.kr/news/photo/202010/50970_51164_4758.jpg'\n    }, {\n      id: shortId.generate(),\n      src: 'https://cdn.mkhealth.co.kr/news/photo/202010/50970_51164_4758.jpg'\n    }, {\n      id: shortId.generate(),\n      src: 'https://cdn.mkhealth.co.kr/news/photo/202010/50970_51164_4758.jpg'\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'nero'\n      },\n      content: '우와 개정판이 나왔군요'\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'hero'\n      },\n      content: '우아 ㅇ우ㅏ'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: '젤초'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: \"젤초\"\n    }\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost(action.data)].concat(_toConsumableArray(state.mainPosts)),\n        addPostDone: true,\n        addPostLoading: false\n      });\n\n    case ADD_POST_FAILURE:\n      return {\n        addPostError: action.error,\n        addPostLoading: false\n      };\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        var postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n        var post = state.mainPosts[postIndex];\n        post.Comments = [dummyComment(action.data.content)].concat(_toConsumableArray(post.Comments));\n\n        var mainPosts = _toConsumableArray(state.mainPosts);\n\n        mainPosts[postIndex] = post;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: mainPosts,\n          addCommentDone: true,\n          addCommentLoading: false\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      return {\n        addCommentError: action.error,\n        addCommentLoading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Kim/OneDrive/바탕 화면/React/nodeBird/prepare/front/reducers/post.js"],"names":["shortId","initalState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","error","postIndex","findIndex","v","postId","post"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\r\n\r\nexport const initalState = {\r\n    mainPosts: [{\r\n        id: 1,\r\n        User:{\r\n            id: 1,\r\n            nickname:'제로초',\r\n        },\r\n        content: '첫번째 게시물 입니다. #해시태그 #익스프레스',\r\n        Images : [{\r\n            id:shortId.generate(),\r\n            src: 'https://cdn.mkhealth.co.kr/news/photo/202010/50970_51164_4758.jpg'\r\n        },{\r\n            id:shortId.generate(),\r\n            src: 'https://cdn.mkhealth.co.kr/news/photo/202010/50970_51164_4758.jpg'\r\n        },{\r\n            id:shortId.generate(),\r\n            src : 'https://cdn.mkhealth.co.kr/news/photo/202010/50970_51164_4758.jpg'\r\n        }],\r\n        Comments : [{\r\n            id: shortId.generate(),\r\n            User:{\r\n                id:shortId.generate(),\r\n                nickname: 'nero',\r\n            },\r\n            content: '우와 개정판이 나왔군요',\r\n        }, {\r\n            id:shortId.generate(),\r\n            User : {\r\n                id: shortId.generate(),\r\n                nickname : 'hero',\r\n            },\r\n            content : '우아 ㅇ우ㅏ',\r\n        }]\r\n    }],\r\n    imagePaths: [],\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError:null,\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError:null,\r\n}\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const addPost = (data) => ({\r\n    type: ADD_POST_REQUEST,\r\n    data\r\n})\r\nexport const addComment = (data) => ({\r\n    type: ADD_COMMENT_REQUEST,\r\n    data,\r\n})\r\n\r\nconst dummyPost = (data) => ({\r\n    id: shortId.generate(),\r\n    content: data,\r\n    User: {\r\n        id: 1,\r\n        nickname: '젤초',\r\n    },\r\n    Images: [],\r\n    Comments:[],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n    id:shortId.generate(),\r\n    content: data,\r\n    User:{\r\n        id:1,\r\n        nickname: \"젤초\"\r\n    }\r\n});\r\n\r\nconst reducer = (state = initalState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST_REQUEST:\r\n            return{\r\n                ...state,\r\n                addPostLoading:true,\r\n                addPostDone:false,\r\n                addPostError:null,\r\n            };\r\n        case ADD_POST_SUCCESS:\r\n            return{\r\n                ...state,\r\n                mainPosts: [dummyPost(action.data), ...state.mainPosts],\r\n                addPostDone: true,\r\n                addPostLoading:false,\r\n            };\r\n        case ADD_POST_FAILURE:\r\n            return{\r\n                addPostError:action.error,\r\n                addPostLoading:false,\r\n            };\r\n        case ADD_COMMENT_REQUEST:\r\n            return{\r\n                ...state,\r\n                addCommentLoading:true,\r\n                addCommentDone:false,\r\n                addCommentError:null,\r\n            };\r\n        case ADD_COMMENT_SUCCESS:{\r\n            const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n            const post = state.mainPosts[postIndex];\r\n            post.Comments= [dummyComment(action.data.content), ...post.Comments];\r\n            const mainPosts = [...state.mainPosts];\r\n            mainPosts[postIndex] = post;\r\n            return{\r\n                ...state,\r\n                mainPosts,\r\n                addCommentDone: true,\r\n                addCommentLoading:false,\r\n            };\r\n        }\r\n        case ADD_COMMENT_FAILURE:\r\n            return{\r\n                addCommentError:action.error,\r\n                addCommentLoading:false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}