{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kim\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\React\\\\nodeBird\\\\prepare\\\\front\\\\componets\\\\PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Avatar, Button, Card, Popover, List, Comment } from \"antd\";\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport PostImages from \"./PostImages\";\nimport { useCallback, useState } from \"react\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./postCardContent\";\nimport { REMOVE_POST_REQUEST } from \"../reducers/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    dispatch({\n      type: REMOVE_POST_REQUEST\n    });\n  });\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 42\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retwwet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 22\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 22\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              onClick: onRemovePost,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, _this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 34\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 45\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCard, \"w0ZOJVeM6MS8L+EsELvvlHj8ehg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createAt: PropTypes.object,\n    Commemnts: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/Kim/OneDrive/바탕 화면/React/nodeBird/prepare/front/componets/PostCard.js"],"names":["Avatar","Button","Card","Popover","List","Comment","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","useDispatch","useSelector","PropTypes","PostImages","useCallback","useState","CommentForm","PostCardContent","REMOVE_POST_REQUEST","PostCard","post","dispatch","liked","setLiked","onToggleLike","prev","commentFormOpened","setCommentFormOpened","onToggleComment","onRemovePost","type","id","state","user","me","marginBottom","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createAt","Commemnts","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import { Avatar, Button, Card, Popover, List, Comment } from \"antd\";\r\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport PostImages from \"./PostImages\";\r\nimport { useCallback, useState } from \"react\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport PostCardContent from \"./postCardContent\";\r\nimport { REMOVE_POST_REQUEST } from \"../reducers/post\";\r\n\r\nconst PostCard = ({post}) => {\r\n    const dispatch = useDispatch();\r\n    const [liked, setLiked] = useState(false);\r\n    const onToggleLike = useCallback(() =>{\r\n        setLiked((prev) => !prev);\r\n    },[]);\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    const onToggleComment = useCallback(() =>{\r\n        setCommentFormOpened((prev) => !prev);\r\n    },[]);\r\n    const onRemovePost = useCallback(()=>{\r\n        dispatch({\r\n            type: REMOVE_POST_REQUEST,\r\n        })\r\n    })\r\n\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    return(\r\n        <div style={{ marginBottom: 20}}>\r\n            <Card\r\n                cover={post.Images[0] && <PostImages images={post.Images} />}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retwwet\" />,\r\n                    liked\r\n                    ?<HeartTwoTone  twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\r\n                    :<HeartOutlined key=\"heart\" onClick={onToggleLike} />,\r\n                    <MessageOutlined key=\"comment\" onClick = {onToggleComment} />,\r\n                    <Popover key=\"more\" content={(\r\n                        <Button.Group>\r\n                            {id && post.User.id === id ?\r\n                            (\r\n                            <>\r\n                            <Button>수정</Button>\r\n                            <Button type=\"danger\" onClick={onRemovePost}>삭제</Button>\r\n                            </>\r\n                            ) : <Button>신고</Button> }\r\n                        </Button.Group>\r\n                    )}>\r\n                        <EllipsisOutlined />\r\n                    </Popover>\r\n                ]}\r\n            >\r\n                <Card.Meta\r\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                    title={post.User.nickname}\r\n                    description={<PostCardContent postData={post.content}/>}\r\n                />\r\n            </Card>\r\n            {commentFormOpened && (\r\n                <div>\r\n                    <CommentForm post = {post} />\r\n                    <List \r\n                        header = {`${post.Comments.length}개의 댓글`}\r\n                        itemLayout = \"horizontal\"\r\n                        dataSource = {post.Comments}\r\n                        renderItem={(item) => (\r\n                            <li>\r\n                                <Comment\r\n                                    author={item.User.nickname}\r\n                                    avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                                    content={item.content}\r\n                                />\r\n                            </li>\r\n                        )}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n        id:PropTypes.number,\r\n        User:PropTypes.object, \r\n        content: PropTypes.string,\r\n        createAt: PropTypes.object,\r\n        Commemnts : PropTypes.arrayOf(PropTypes.object),\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n}\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}