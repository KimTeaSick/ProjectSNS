{"ast":null,"code":"import { all, fork, put, takeLatest, delay, throttle, call } from \"@redux-saga/core/effects\";\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction addPostAPI(data) {\n  return axios.post('/post', {\n    content: data\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post('/post/images', data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadPostsAPI(data) {\n  return axios.get('/posts', data);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.data);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePosts(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePosts(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePosts);\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePosts);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchRemovePost), fork(watchAddComment), fork(watchLoadPosts), fork(watchLikePost), fork(watchUnlikePost), fork(watchUploadImages)]);\n}","map":{"version":3,"sources":["C:/Users/Kim/OneDrive/바탕 화면/React/nodeBird/prepare/front/sagas/post.js"],"names":["all","fork","put","takeLatest","delay","throttle","call","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","addPostAPI","data","post","content","addPost","action","result","type","id","err","console","error","response","uploadImagesAPI","uploadImages","loadPostsAPI","get","loadPosts","likePostAPI","patch","likePosts","unlikePostAPI","delete","unlikePosts","removePostAPI","removePost","addCommentAPI","postId","addComment","watchAddPost","watchRemovePost","watchAddComment","watchLoadPosts","watchLikePost","watchUnlikePost","watchUploadImages","postSaga"],"mappings":"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","sourcesContent":["import { all, fork, put, takeLatest, delay, throttle, call } from \"@redux-saga/core/effects\";\r\nimport axios from 'axios';\r\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n         ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE\r\n        ,REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE\r\n        ,LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE\r\n        ,LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE\r\n        ,UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE\r\n        ,UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE\r\n        ,\r\n         }\r\nfrom '../reducers/post';\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\r\n\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/post',  {content:data} );\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try{\r\n        const result = yield call(addPostAPI, action.data);\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n        yield put ({\r\n            type: ADD_POST_TO_ME,\r\n            data: result.data.id,\r\n        });\r\n    }catch (err){\r\n        console.error(err);\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            error: err.response.data,   \r\n        })\r\n    }\r\n}\r\n\r\nfunction uploadImagesAPI(data) {\r\n    return axios.post('/post/images',data);\r\n}\r\n\r\nfunction* uploadImages(action) {\r\n    try{\r\n        const result = yield call(uploadImagesAPI, action.data);\r\n        yield put({\r\n            type: UPLOAD_IMAGES_SUCCESS,\r\n            data: result.data,\r\n        })\r\n    }catch (err){\r\n        console.error(err);\r\n        yield put({\r\n            type: UPLOAD_IMAGES_FAILURE,\r\n            error: err.response.data,   \r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction loadPostsAPI(data) {\r\n    return axios.get('/posts',data);\r\n}\r\n\r\nfunction* loadPosts(action) {\r\n    try{\r\n        const result = yield call(loadPostsAPI, action.data);\r\n        yield put({\r\n            type: LOAD_POSTS_SUCCESS,\r\n            data: result.data,\r\n        })\r\n    }catch (err){\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_POSTS_FAILURE,\r\n            error: err.response.data,   \r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction likePostAPI(data) {\r\n    return axios.patch(`/post/${data}/like`);\r\n}\r\n\r\nfunction* likePosts(action) {\r\n    try{\r\n        const result = yield call(likePostAPI, action.data);\r\n        yield put({\r\n            type: LIKE_POST_SUCCESS,\r\n            data: result.data,\r\n        })\r\n    }catch (err){\r\n        console.error(err);\r\n        yield put({\r\n            type: LIKE_POST_FAILURE,\r\n            error: err.response.data,   \r\n        });\r\n    }\r\n}\r\n\r\nfunction unlikePostAPI(data) {\r\n    return axios.delete(`/post/${data}/like`);\r\n}\r\n\r\nfunction* unlikePosts(action) {\r\n    try{\r\n        const result = yield call(unlikePostAPI, action.data);\r\n        yield put({\r\n            type: UNLIKE_POST_SUCCESS,\r\n            data: result.data,\r\n        })\r\n    }catch (err){\r\n        console.error(err);\r\n        yield put({\r\n            type: UNLIKE_POST_FAILURE,\r\n            error: err.response.data,   \r\n        });\r\n    }\r\n}\r\n\r\nfunction removePostAPI(data) {\r\n    return axios.delete(`/post/${data}`);\r\n}\r\n\r\nfunction* removePost(action) {\r\n    try{\r\n        const result = yield call(removePostAPI, action.data);\r\n        yield put({\r\n            type: REMOVE_POST_SUCCESS,\r\n            data : result.data,\r\n        });\r\n        yield put ({\r\n            type: REMOVE_POST_OF_ME,\r\n            data: action.data,\r\n        });\r\n    }catch (err){\r\n        yield put({\r\n            type: REMOVE_POST_FAILURE,\r\n            error: err.response.data,   \r\n        })\r\n    }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n    return axios.post(`/post/${data.postId}/comment`, data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n    try{\r\n        const result = yield call(addCommentAPI, action.data);\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    }catch (err){\r\n        console.error(err);\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            error: err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST,addPost);\r\n}\r\nfunction* watchRemovePost() {\r\n    yield takeLatest(REMOVE_POST_REQUEST,removePost);\r\n}\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST,addComment);\r\n}\r\nfunction* watchLoadPosts() {\r\n    yield throttle(5000, LOAD_POSTS_REQUEST,loadPosts);\r\n}\r\nfunction* watchLikePost() {\r\n    yield takeLatest(LIKE_POST_REQUEST,likePosts);\r\n}\r\nfunction* watchUnlikePost() {\r\n    yield takeLatest(UNLIKE_POST_REQUEST,unlikePosts);\r\n}\r\nfunction* watchUploadImages() {\r\n    yield takeLatest(UPLOAD_IMAGES_REQUEST,uploadImages);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchRemovePost),\r\n        fork(watchAddComment),\r\n        fork(watchLoadPosts),\r\n        fork(watchLikePost),\r\n        fork(watchUnlikePost),\r\n        fork(watchUploadImages),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}