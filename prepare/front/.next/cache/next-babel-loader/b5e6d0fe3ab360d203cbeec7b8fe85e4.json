{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Kim\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\React\\\\nodeBird\\\\prepare\\\\front\\\\componets\\\\CommentForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Form, Input, Button } from \"antd\";\nimport { useCallback, useState, useEffect } from \"react\";\nimport useinput from \"../hooks/useinput\";\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addCommentDone = _useSelector.addCommentDone,\n      addPostDone = _useSelector.addPostDone,\n      addCommentLoading = _useSelector.addCommentLoading;\n\n  var _useinput = useinput(''),\n      _useinput2 = _slicedToArray(_useinput, 3),\n      commentText = _useinput2[0],\n      onChangeCommentText = _useinput2[1],\n      setCommentText = _useinput2[2];\n\n  useEffect(function () {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addPostDone]);\n  var onSubmitComment = useCallback(function () {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        row: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40,\n          zIndex: 1\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: addCommentLoading,\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CommentForm, \"6MVSzHwDSdaPK0EEeNkGzX3Shb8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["C:/Users/Kim/OneDrive/바탕 화면/React/nodeBird/prepare/front/componets/CommentForm.js"],"names":["Form","Input","Button","useCallback","useState","useEffect","useinput","PropTypes","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","id","state","user","me","addCommentDone","addPostDone","addCommentLoading","commentText","onChangeCommentText","setCommentText","onSubmitComment","type","data","content","postId","userId","position","margin","right","bottom","zIndex","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,SAASA,IAAT,EAAeC,KAAf,EAAqBC,MAArB,QAAmC,MAAnC;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAmC,kBAAnC;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAW;AAAA;;AAAA,MAATC,IAAS,QAATA,IAAS;AAC3B,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,MAAMM,EAAE,GAAGL,WAAW,CAAC,UAACM,KAAD;AAAA;;AAAA,6BAAUA,KAAK,CAACC,IAAN,CAAWC,EAArB,mDAAU,eAAeH,EAAzB;AAAA,GAAD,CAAtB;;AACA,qBAAyDL,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACH,IAAjB;AAAA,GAAD,CAApE;AAAA,MAAOM,cAAP,gBAAOA,cAAP;AAAA,MAAuBC,WAAvB,gBAAuBA,WAAvB;AAAA,MAAoCC,iBAApC,gBAAoCA,iBAApC;;AACA,kBAA2Dd,QAAQ,CAAC,EAAD,CAAnE;AAAA;AAAA,MAAOe,WAAP;AAAA,MAAoBC,mBAApB;AAAA,MAAyCC,cAAzC;;AAEAlB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGa,cAAH,EAAkB;AACdK,MAAAA,cAAc,CAAC,EAAD,CAAd;AACH;AACJ,GAJQ,EAIN,CAACJ,WAAD,CAJM,CAAT;AAMA,MAAMK,eAAe,GAAGrB,WAAW,CAAC,YAAM;AACtCU,IAAAA,QAAQ,CAAC;AACLY,MAAAA,IAAI,EAACf,mBADA;AAELgB,MAAAA,IAAI,EAAE;AAACC,QAAAA,OAAO,EAAEN,WAAV;AAAuBO,QAAAA,MAAM,EAAEhB,IAAI,CAACE,EAApC;AAAwCe,QAAAA,MAAM,EAAEf;AAAhD;AAFD,KAAD,CAAR;AAIH,GALkC,EAKjC,CAACO,WAAD,CALiC,CAAnC;AAMA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAIG,eAAlB;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEM,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAlB;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEV,WAAvB;AAAoC,QAAA,QAAQ,EAAIC,mBAAhD;AAAqE,QAAA,GAAG,EAAE;AAA1E;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,MAAD;AACA,QAAA,KAAK,EAAE;AAAEQ,UAAAA,QAAQ,EAAC,UAAX;AAAuBE,UAAAA,KAAK,EAAE,CAA9B;AAAiCC,UAAAA,MAAM,EAAE,CAAC,EAA1C;AAA8CC,UAAAA,MAAM,EAAE;AAAtD,SADP;AAEA,QAAA,IAAI,EAAC,SAFL;AAEe,QAAA,QAAQ,EAAC,QAFxB;AAGA,QAAA,OAAO,EAAEd,iBAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAYH,CA9BD;;GAAMT,W;UACeH,W,EACNC,W,EAC8CA,W;;;KAHvDE,W;AAgCNA,WAAW,CAACwB,SAAZ,GAAwB;AACpBvB,EAAAA,IAAI,EAAEL,SAAS,CAAC6B,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAe1B,WAAf","sourcesContent":["import { Form, Input,Button } from \"antd\"\r\nimport { useCallback, useState, useEffect } from \"react\";\r\nimport useinput from \"../hooks/useinput\";\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ADD_COMMENT_REQUEST} from \"../reducers/post\";\r\n\r\nconst CommentForm = ({post}) =>{\r\n    const dispatch = useDispatch();\r\n    const id = useSelector((state)=> state.user.me?.id);\r\n    const {addCommentDone, addPostDone, addCommentLoading} = useSelector((state) => state.post)\r\n    const [commentText, onChangeCommentText, setCommentText] = useinput('');\r\n    \r\n    useEffect(() => {\r\n        if(addCommentDone){\r\n            setCommentText('');\r\n        }\r\n    }, [addPostDone])\r\n    \r\n    const onSubmitComment = useCallback(() => {    \r\n        dispatch({\r\n            type:ADD_COMMENT_REQUEST,\r\n            data: {content: commentText, postId: post.id, userId: id },\r\n        });\r\n    },[commentText])\r\n    return(\r\n        <Form onFinish = {onSubmitComment}>\r\n            <Form.Item style={{ position: 'relative', margin: 0}}>\r\n                <Input.TextArea value={commentText} onChange = {onChangeCommentText} row={4} />\r\n                <Button \r\n                style={{ position:'absolute', right: 0, bottom: -40, zIndex: 1 }} \r\n                type=\"primary\" htmlType=\"submit\" \r\n                loading={addCommentLoading}\r\n                >삐약</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}