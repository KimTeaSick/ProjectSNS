{"ast":null,"code":"import { all, fork, takeEvery, call, put, takeLatest, delay } from \"@redux-saga/core/effects\";\n\nfunction addPostAPI(data) {\n  return axios.post('/api.addPost', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield 1000;\n    yield put({\n      type: 'ADD_POST_SUCCESS' //data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_POST_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST_REQUEST', addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchPost)]);\n}","map":{"version":3,"sources":["C:/Users/Kim/OneDrive/바탕 화면/React/nodeBird/prepare/front/sagas/post.js"],"names":["all","fork","takeEvery","call","put","takeLatest","delay","addPostAPI","data","axios","post","addPost","action","type","err","response","watchAddPost","postSaga","watchPost"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqCC,GAArC,EAA0CC,UAA1C,EAAsDC,KAAtD,QAAmE,0BAAnE;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,SAAOC,KAAK,CAACC,IAAN,CAAW,cAAX,EAA2BF,IAA3B,CAAP;AACH;;AAGD,UAAUG,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAG;AACC;AACA,UAAM,IAAN;AACA,UAAMR,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAE,kBADA,CAEN;;AAFM,KAAD,CAAT;AAIH,GAPD,CAOC,OAAOC,GAAP,EAAW;AACR,UAAMV,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAE,kBADA;AAENL,MAAAA,IAAI,EAAEM,GAAG,CAACC,QAAJ,CAAaP;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUQ,YAAV,GAAyB;AACrB,QAAMX,UAAU,CAAC,kBAAD,EAAoBM,OAApB,CAAhB;AACH;;AAED,eAAe,UAAUM,QAAV,GAAqB;AAChC,QAAMjB,GAAG,CAAC,CACNC,IAAI,CAACiB,SAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { all, fork, takeEvery, call, put, takeLatest, delay } from \"@redux-saga/core/effects\";\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/api.addPost', data);\r\n}\r\n\r\n\r\nfunction* addPost(action) {\r\n    try{\r\n        // const result = yield call(addPostAPI, action.data);\r\n        yield(1000);\r\n        yield put({\r\n            type: 'ADD_POST_SUCCESS',\r\n            //data: result.data,\r\n        });\r\n    }catch (err){\r\n        yield put({\r\n            type: 'ADD_POST_FAILURE',\r\n            data: err.response.data,   \r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest('ADD_POST_REQUEST',addPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchPost),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}