{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kim\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\React\\\\nodeBird\\\\prepare\\\\front\\\\componets\\\\PostForm.js\";\nimport { Button, Form, Input } from \"antd\";\nimport React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport image from \"../../back/models/image\";\nimport useinput from \"../hooks/useinput\";\nimport { addPost, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from \"../reducers/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  const [text, onChangeText, setText] = useinput('');\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  const onSubmit = useCallback(() => {\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성하세요');\n    }\n\n    const formdata = new FormData();\n    imagePaths.forEach(p => {\n      formdata.append('image', p);\n    });\n    formdata.append('content', text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formdata\n    });\n  }, [text, imagePaths]);\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onChangeImages = useCallback(e => {\n    console.log('images', e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  });\n  const onRemoveImage = useCallback(index => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      dara: index\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput,\n        onChange: onChangeImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          float: ' right'\n        },\n        htmlType: \"submit\",\n        children: \"\\uC9F9\\uC9F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(v => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://loaclhost:3065/${v}`,\n          style: {\n            width: '200px'\n          },\n          alt: v\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onRemoveImage(i),\n            children: \"\\uC81C\\uAC70\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, v, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/Kim/OneDrive/바탕 화면/React/nodeBird/prepare/front/componets/PostForm.js"],"names":["Button","Form","Input","React","useCallback","useState","useRef","useEffect","useDispatch","useSelector","image","useinput","addPost","UPLOAD_IMAGES_REQUEST","REMOVE_IMAGE","ADD_POST_REQUEST","PostForm","dispatch","imagePaths","addPostDone","state","post","text","onChangeText","setText","onSubmit","trim","alert","formdata","FormData","forEach","p","append","type","data","imageInput","onClickImageUpload","current","click","onChangeImages","e","console","log","target","files","imageFormData","call","f","onRemoveImage","index","dara","margin","float","map","v","display","width","i"],"mappings":"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","sourcesContent":["import { Button, Form, Input } from \"antd\";\r\nimport React, { useCallback, useState, useRef, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport image from \"../../back/models/image\";\r\nimport useinput from \"../hooks/useinput\";\r\nimport { addPost, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from \"../reducers/post\";\r\n\r\nconst PostForm = () => {\r\n    const dispatch = useDispatch();\r\n    const { imagePaths, addPostDone } = useSelector((state) => state.post);\r\n    const [text, onChangeText, setText] = useinput('');\r\n\r\n    useEffect(() => {\r\n        if(addPostDone){\r\n            setText('');\r\n        }\r\n    }, [addPostDone])\r\n\r\n    const onSubmit = useCallback(()=> {\r\n        if(!text || !text.trim()){\r\n            return alert('게시글을 작성하세요')\r\n        }\r\n        const formdata = new FormData();\r\n        imagePaths.forEach((p) => {\r\n            formdata.append('image', p);\r\n        });\r\n        formdata.append('content', text);\r\n        return dispatch({\r\n            type: ADD_POST_REQUEST,\r\n            data: formdata,\r\n        })\r\n    }, [text, imagePaths]);\r\n    \r\n    const imageInput = useRef();\r\n    const onClickImageUpload = useCallback(()=>{\r\n        imageInput.current.click();\r\n    },[imageInput.current]);\r\n\r\n    const onChangeImages = useCallback((e)=>{\r\n        console.log('images', e.target.files);\r\n        const imageFormData = new FormData();\r\n        [].forEach.call(e.target.files,(f)=>{\r\n            imageFormData.append('image', f);\r\n        });\r\n        dispatch({\r\n            type: UPLOAD_IMAGES_REQUEST,\r\n            data: imageFormData,\r\n        })\r\n    });\r\n    const onRemoveImage = useCallback((index)=>()=>{\r\n        dispatch({\r\n            type: REMOVE_IMAGE,\r\n            dara: index,\r\n        });\r\n    });\r\n\r\n    return(\r\n        <Form style={{ margin: '10px 0 20px'}} encType=\"multipart/form-data\" onFinish = {onSubmit}>\r\n            <Input.TextArea\r\n                value={text}\r\n                onChange={onChangeText}\r\n                maxLength={140}\r\n                placeholder=\"어떤 신기한 일이 있었나요?\" />\r\n            <div>\r\n                <input type=\"file\" name=\"image\" multiple hidden ref={imageInput} onChange={onChangeImages} />\r\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n                <Button type=\"primary\" style={{ float: ' right' }} htmlType=\"submit\">짹짹</Button>\r\n            </div>\r\n            <div>\r\n                {imagePaths.map((v) => (\r\n                    <div key={v} style={{ display: 'inline-block'}}>\r\n                        <img src={`http://loaclhost:3065/${v}`} style={{ width : '200px' }} alt={v}/>\r\n                        <div>\r\n                            <Button onClick={onRemoveImage(i)}>제거</Button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Form>\r\n    )\r\n};\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}